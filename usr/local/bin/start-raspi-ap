#!/bin/bash

CONFIG_FILE="/etc/raspi-ap/config.conf"
DHCPCD_CONF="/etc/dhcpcd.conf"
DNSMASQ_CONF="/etc/dnsmasq.conf"
HOSTAPD_CONF="/etc/hostapd/hostapd.conf"
HOSTAPD_DEFAULT="/etc/default/hostapd"
IPTABLES_RULES="/etc/iptables/rules.v4"
WLAN_IFACE="wlan0"

if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
else
    echo "[ERR] Config file not found: $CONFIG_FILE"
    exit 1
fi

# Detect ethernet interface
get_eth_interface() {
    ip -o link show | awk -F': ' '{print $2}' | grep -E '^en[a-z0-9]*$' | head -n1
}
ETH_IFACE=$(get_eth_interface)
if [ -z "$ETH_IFACE" ]; then
    echo "[ERR] Could not detect Ethernet interface (eth0/end0/enx...)"
    exit 1
fi

# Stop systemd-resolved if needed
if systemctl is-active --quiet systemd-resolved; then
    echo "[!] Disabling systemd-resolved to free up port 53..."
    systemctl stop systemd-resolved
    systemctl disable systemd-resolved
    rm -f /etc/resolv.conf
    echo "nameserver 8.8.8.8" > /etc/resolv.conf
fi

echo "[1] Setting static IP for $WLAN_IFACE..."
cat <<EOF >> "$DHCPCD_CONF"

interface $WLAN_IFACE
static ip_address=$STATIC_IP/24
nohook wpa_supplicant
EOF

echo "[2] Restarting dhcpcd..."
systemctl restart dhcpcd
sleep 5

echo "[3] Creating hostapd config..."
cat <<EOF > "$HOSTAPD_CONF"
interface=$WLAN_IFACE
driver=nl80211
ssid=$SSID
hw_mode=g
channel=7
wmm_enabled=0
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=$PASSPHRASE
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
EOF
echo "DAEMON_CONF=\"$HOSTAPD_CONF\"" > "$HOSTAPD_DEFAULT"

echo "[4] Setting up dnsmasq..."
mv "$DNSMASQ_CONF" "$DNSMASQ_CONF.orig"
cat <<EOF > "$DNSMASQ_CONF"
interface=$WLAN_IFACE
dhcp-range=192.168.4.2,192.168.4.20,255.255.255.0,24h
EOF

echo "[5] Enabling IPv4 forwarding..."
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
sysctl -p

echo "[6] Setting up NAT via iptables..."
iptables -t nat -A POSTROUTING -o "$ETH_IFACE" -j MASQUERADE
mkdir -p "$(dirname "$IPTABLES_RULES")"
sh -c "iptables-save > $IPTABLES_RULES"

echo "[7] Starting services..."
systemctl unmask hostapd
systemctl enable hostapd
systemctl restart hostapd
systemctl restart dnsmasq

echo "[âœ”] Access point is now live on $WLAN_IFACE"
